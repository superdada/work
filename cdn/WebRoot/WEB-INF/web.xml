<?xml version="1.0" encoding="UTF-8"?>
<!--
    一般的web工程中都会用到web.xml，web.xml主要用来配置，可以方便的开发web工程。web.xml主要用来配置Filter、Listener、Servlet等。
    但是要说明的是web.xml并不是必须的，一个web工程可以没有web.xml文件。
-->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!--
        <servlet></servlet> 用来声明一个servlet的数据，主要有以下子元素：

        <servlet-name></servlet-name> 指定servlet的名称
        <servlet-class></servlet-class> 指定servlet的类名称
        <jsp-file></jsp-file> 指定web站台中的某个JSP网页的完整路径
        <init-param></init-param> 用来定义参数，可有多个init-param。在servlet类中通过getInitParamenter(String name)方法访问初始化参数
        <load-on-startup></load-on-startup>指定当Web应用启动时，装载Servlet的次序。当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet。当值为负或未定义：Servlet容器将在Web客户首次访问这个servlet时加载它。
        <servlet-mapping></servlet-mapping> 用来定义servlet所对应的URL，包含两个子元素
        <servlet-name></servlet-name> 指定servlet的名称
        <url-pattern></url-pattern> 指定servlet所对应的URL
    -->

    <!--
        配置Spring的IOC的容器
        这个地方默认加载的是系统的变量的配置文件，它们属于是系统级别的配置。
        在此，我们用来系统全局配置文件：spring.xml，
        存放shiro过滤器的配置文件：shiro.xml。
        其中xx.xml文件是需要你在cf中手动创建的配置文件，里面具体内容后面配置，这里相当于是告诉系统文件在哪，这里为了说明方便命名
    -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:cn/com/ailbb/config/spring.xml,
            classpath:cn/com/ailbb/config/shiro.xml,
            classpath:cn/com/ailbb/config/mybatis.xml
        </param-value>
    </context-param>

    <!--监听器，启动Web容器时，自动装配ApplicationContext的配置信息。因为它实现了ServletContextListener这个接口，在web.xml配置这个监听器，启动容器时，就会默认执行它实现的方法。-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--系统属性初始化-->
    <listener>
        <listener-class>cn.com.ailbb.manage.SystemManage</listener-class>
    </listener>

    <!--
        配置SpringMVC的控制器-DispatcherServlet
        默认加载Spring servlet配置文件文件名字spring-servlet.xml 从webapps WEB-INF文件夹下。
    -->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:cn/com/ailbb/config/spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- 配置spring拦截请求的形式，在此我们配置为.do -->
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <!--
        配置编码方式过滤器
        字符过滤器
        CharacterEncodingFilter获得，且这一步需放在所有过滤器最前面，才有效果
    -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 配置Shiro过滤器,先让Shiro过滤系统接收到的请求 -->
    <!-- 这里filter-name必须对应applicationContext.xml中定义的<bean id="shiroFilter"/> -->
    <!-- 通常会将此filter-mapping放置到最前面(即其他filter-mapping前面),以保证它是过滤器链中第一个起作用的 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <!-- 使用[/*]匹配所有请求,保证所有的可控请求都经过Shiro的过滤 -->
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--配置响应编码页面-->
    <welcome-file-list>
        <welcome-file>web/module/login/login.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
    </welcome-file-list>

    <error-page>
        <error-code>401</error-code>
        <location>/web/module/undefind/unauthorized.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/web/module/undefind/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/web/module/undefind/404.jsp</location>
    </error-page>
</web-app>